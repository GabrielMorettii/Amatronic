{
  "openapi": "3.0.0",
  "info": {
      "title": "Amatronic Documentation",
      "description": "This is an E-commerce's API Rest",
      "version": "1.0.0",
      "contact": {
          "email": "gabrielmorettisilva@gmail.com"
      }
  },
  "paths": {
      "/customers": {
          "post": {
              "tags": ["Customers"],
              "summary": "Create a customer",
              "description": "Create a new customer",
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "type": "object",
                              "properties": {
                                  "email": {
                                    "type": "string"
                                  },
                                  "name": {
                                      "type": "string"
                                  },
                                  "password": {
                                      "type": "string"
                                  }
                              },
                              "example": {
                                  "email": "emailsample@gmail.com",
                                  "name": "sample name",
                                  "password": "sample password"
                              }
                          }
                      }
                  }
              },
              "responses": {
                  "201": {
                      "description": "Created"
                  },
                  "400": {
                      "description": "The email already exists"
                  }
              }
          },
          "get": {
              "tags": ["Customers"],
              "summary": "List all customers",
              "description": "Only the admin can list all customers",
              "security": [
                {
                    "bearerAuth": []
                }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "type": "object",
                                      "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "email": {
                                            "type": "string"
                                          },
                                          "admin": {
                                            "type": "boolean"
                                          },
                                          "avatar": {
                                            "type": "string",
                                            "nullable": true
                                          },
                                          "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                          },
                                          "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                          }
                                      }
                                  }
                              }
                          }
                      }
                  },
                  "401":{
                      "description": "Something is wrong with the token",
                      "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "message": {
                                      "type": "string"
                                    }
                                },
                                "oneOf": {
                                  "$ref": "#/components/schemas/a",
                                  "$refi": "#/components/schemas/b"
                                }
                            }
                        }
                    }
                  }
              }
          },
          "put": {
            "tags": ["Customers"],
            "summary": "Update a customer",
            "description": "The costumer can update yours informations",
            "security": [
              {
                  "bearerAuth": []
              }
            ],
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                  "type": "string",
                                  "required": false
                                },
                                "email": {
                                  "type": "string",
                                  "required": false
                                },
                                "password": {
                                  "type": "string",
                                  "required": false
                                },
                                "avatar": {
                                  "type": "string",
                                  "required": false
                                }
                            },
                            "example": {
                                "email": "emailsample@gmail.com",
                                "name": "sample name",
                                "description": "sample description",
                                "avatar": "sample avatar"
                            }
                        }
                    }
                }
            },
            "responses": {
                "200": {
                  "description": "OK"
                },
                "400": {
                  "description": "The email is already taken!"
                },
                "404": {
                  "description": "The user does not exists!"
                }
            }
          },
          "delete": {
            "tags": ["Customers"],
            "summary": "Delete a customer",
            "description": "The costumer can delete the his account",
            "security": [
              {
                  "bearerAuth": []
              }
            ],
            "responses": {
                "204": {
                  "description": "No Content"
                },
                "404": {
                  "description": "Costumer does not exists!"
                }
            }
          }
      },
      "/sessions": {
        "post": {
            "tags": ["Session"],
            "summary": "Authenticate Customer",
            "description": "The Customer Authentication",
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "Ok"
                },
                "400": {
                    "description": "Invalid credentials!"
                }
            }
        }
    }
  },
  "components": {
    "securitySchemes": {
        "bearerAuth": {
            "type": "http",
            "scheme": "bearer",
            "bearerFormat": "JWT"
        }
    },
    "schemas": {
      "a": {
        "example": {
          "message": "Token is missing!"
        }
      },
      "b": {
        "example": {
          "message": "Invalid token!"
        }
      }
    }
  }

}
